#!/usr/bin/env bash

# [GitHub Actions Documentation](https://help.github.com/en/actions)

set -euo pipefail

readonly SCRIPT_FILE_NAME="$(basename "$0")"
readonly SCRIPT_DIR_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly SCRIPT_FILE_PATH="$SCRIPT_DIR_PATH/$SCRIPT_FILE_NAME"

setupNginx() {
    sudo apt install -y nginx
    # shellcheck disable=SC2016
    echo 'server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /home/runner/work/framework/framework/client;

    index index.php;

    # Catch all
    server_name _;

    location / {
        try_files $uri =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        #fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_pass 127.0.0.1:9000;
    }
}' | sudo tee > /dev/null /etc/nginx/sites-enabled/default
    sudo systemctl start nginx

    echo --------------------------------------------------------------------------------
    ps faux
    echo --------------------------------------------------------------------------------
    ss -tlnp
    echo --------------------------------------------------------------------------------
    curl -v http://localhost
    echo --------------------------------------------------------------------------------
    find /etc/php/7.4/ -type f -name -print -exec cat {} \;
    exit 1
}

showFacts() {
    echo --------------------------------------------------------------------------------
    env
    ls -al
    id
    cat /etc/os-release
    echo --------------------------------------------------------------------------------
}

prepareEnv() {
    setupNginx

    export MORPHO_CI=GitHub MORPHO_TEST_WEB_SERVER_DOMAIN=127.0.0.1 MORPHO_TEST_WEB_SERVER_PORT=7654
    # GitHub CI exposes the `SELENIUM_JAR_PATH` environment variable with path to the .jar file.
    export MORPHO_SELENIUM_SERVER_JAR_FILE_PATH=$SELENIUM_JAR_PATH MORPHO_GECKOBIN_FILE_PATH=/usr/bin/geckodriver

    sudo npm install -g typescript@next

    # Create block device
    sudo mknod -m 0777 /tmp/block-dev-test b 125 1
    sudo chown $(id -u):$(id -g) /tmp/block-dev-test

    # To running Selenium && firefox, see https://docs.travis-ci.com/user/gui-and-headless-browsers/
    export DISPLAY=:99
    # `start-stop-daemon` is provided by the `dpkg` package
    /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16

    pushd client > /dev/null
    npm install
    popd > /dev/null

    #  - composer config -g github-oauth.github.com ${COMPOSER_TOKEN} &> /dev/null
    composer install --no-interaction

    sudo systemctl start mysql
    export MORPHO_TEST_DB_USER=root MORPHO_TEST_DB_PASSWORD=root MORPHO_TEST_DB_DB=test
    mysql -u"$MORPHO_TEST_DB_USER" -p"$MORPHO_TEST_DB_PASSWORD" -e "DROP DATABASE IF EXISTS $MORPHO_TEST_DB_DB; CREATE DATABASE $MORPHO_TEST_DB_DB DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci"
    mysql -u"$MORPHO_TEST_DB_USER" -p"$MORPHO_TEST_DB_PASSWORD" -e "SHOW DATABASES"
}

runTests() {
    bin/test
    php test/lint.php
}

deployResults() {
    :
    ## https://docs.travis-ci.com/user/deployment/pages/
    ## deploy nightly builds
    ##deploy:
    ##  provider: pages
    ##  skip-cleanup: true
    ##  github-token: $GITHUB_TOKEN
    ##  keep-history: true
    ##  # Directory to push to GitHub Pages, relative to the current directory, defaults to the current directory (example: your_build_folder)
    ##  local-dir: test/result
    ##  # Optional, be verbose about internal steps, defaults to false.
    ##  verbose: false
    ##  on:
    ##    repo: morpho-os/morpho-os.github.io
    ##    branch: master
}

showFacts
prepareEnv
runTests
deployResults
