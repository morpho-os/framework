#!/usr/bin/env bash

# [GitHub Actions Documentation](https://help.github.com/en/actions)

set -euo pipefail

readonly SCRIPT_FILE_NAME="$(basename "$0")"
readonly SCRIPT_DIR_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly SCRIPT_FILE_PATH="$SCRIPT_DIR_PATH/$SCRIPT_FILE_NAME"

readonly BASE_DIR_PATH=$(realpath -e "$SCRIPT_DIR_PATH"/..)

showFacts() {
    echo --------------------------------------------------------------------------------
    #env
    ls -al "$BASE_DIR_PATH"/
    id
    cat /etc/os-release
    echo --------------------------------------------------------------------------------
}

prepareEnv() {
    export MORPHO_CI=GitHub MORPHO_CI_DEBUG=1 MORPHO_TEST_WEB_SERVER_DOMAIN=localhost MORPHO_TEST_WEB_SERVER_PORT=80 MORPHO_GECKO_BIN_FILE_PATH=/usr/bin/geckodriver

    # Create block device
    sudo mknod -m 0777 /tmp/block-dev-test b 125 1
    sudo chown $(id -u):$(id -g) /tmp/block-dev-test

    composer --no-ansi --no-interaction install

    sudo systemctl restart mysql
    export MORPHO_TEST_DB_USER=root MORPHO_TEST_DB_PASSWORD=root MORPHO_TEST_DB_DB=test
    mysql -u"$MORPHO_TEST_DB_USER" -p"$MORPHO_TEST_DB_PASSWORD" -e "DROP DATABASE IF EXISTS $MORPHO_TEST_DB_DB; CREATE DATABASE $MORPHO_TEST_DB_DB DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci"
    mysql -u"$MORPHO_TEST_DB_USER" -p"$MORPHO_TEST_DB_PASSWORD" -e "SHOW DATABASES"
}

runTests() {
    $SCRIPT_DIR_PATH/test
    php $BASE_DIR_PATH/test/lint.php
}

deployResults() {
    :
    ## https://docs.travis-ci.com/user/deployment/pages/
    ## deploy nightly builds
    ##deploy:
    ##  provider: pages
    ##  skip-cleanup: true
    ##  github-token: $GITHUB_TOKEN
    ##  keep-history: true
    ##  # Directory to push to GitHub Pages, relative to the current directory, defaults to the current directory (example: your_build_folder)
    ##  local-dir: test/result
    ##  # Optional, be verbose about internal steps, defaults to false.
    ##  verbose: false
    ##  on:
    ##    repo: morpho-os/morpho-os.github.io
    ##    branch: master
}

showFacts
prepareEnv
runTests
deployResults
